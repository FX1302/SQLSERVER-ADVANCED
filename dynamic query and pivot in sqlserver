USE [MIS]
GO

/****** Object:  StoredProcedure [dbo].[SELECT_PERSISTENCY_INQUERY]    Script Date: 19/04/2019 18:19:39 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author: <Author,,Name>
-- Create date: <Create Date,,>
-- Description: <Description,,>
-- EXAMPLE : EXEC SELECT_PERSISTENCY_INQUERY @USERNAME='FXSUPR', @STARDATE = '2018-01-01',@ENDDATE ='2018-06-01',@PERSISTENCYTYPE='10',  @FILTER =" ", @GROUPINGFILTER= "GROUP BY MOB10_MONTH,PCM ",@DIMENSION='PCM',@ISTRANSPOSE=0,@PERSISTENCYVAR=1
-- =============================================
ALTER PROCEDURE [dbo].[SELECT_PERSISTENCY_INQUERY] 
    @USERNAME AS VARCHAR(50),
    @STARDATE AS DATETIME, 
    @ENDDATE AS DATETIME,
@PERSISTENCYTYPE AS VARCHAR(10),
    @FILTER AS VARCHAR(2000),
@GROUPINGFILTER AS VARCHAR(2000),
@DIMENSION AS VARCHAR(200),
@ISTRANSPOSE AS BIT,
@PERSISTENCYVAR AS INT
AS
BEGIN
    
DECLARE @LOGINNAME  VARCHAR(20)
SET @LOGINNAME = ''
    SELECT @LOGINNAME = USERNAME FROM DBO.T_PERSISTENCY_USERS WHERE USERNAME = @USERNAME  

DECLARE @PERSISTENCYTOOL_TABLE VARCHAR(100)
SET @PERSISTENCYTOOL_TABLE = 'T_PERSISTENCY_TOOL' + '_'  + @LOGINNAME 

DECLARE @PERSISTENCYTOOL_PERS VARCHAR(100)
SET @PERSISTENCYTOOL_PERS = 'TESTING_PERS' + '_'  + @LOGINNAME 


-- SET NOCOUNT ON added to prevent extra result sets from
-- interfering with SELECT statements.
SET NOCOUNT ON;
DECLARE @MOBTYPE AS VARCHAR(MAX)

IF @PERSISTENCYTYPE = '01' 
  BEGIN
  SET  @PERSISTENCYTYPE = 'paid01'
  SET @MOBTYPE = 'MOB1_month'
  END
ELSE IF  @PERSISTENCYTYPE = '02'  
  BEGIN
    SET @PERSISTENCYTYPE = 'paid02'
    SET @MOBTYPE = 'MOB2_month'
  END
ELSE IF  @PERSISTENCYTYPE = '03'  
  BEGIN
SET @PERSISTENCYTYPE = 'paid03'
    SET @MOBTYPE = 'MOB3_month'
  END
  
  ELSE IF  @PERSISTENCYTYPE = '04'  
  BEGIN 
SET @PERSISTENCYTYPE = 'paid04'
    SET  @MOBTYPE= 'MOB4_month'
END
  ELSE IF  @PERSISTENCYTYPE = '05'  
  BEGIN
      SET @PERSISTENCYTYPE = 'paid05'
    SET  @MOBTYPE= 'MOB5_month'
  END
  ELSE IF  @PERSISTENCYTYPE = '06' 
    BEGIN 
          SET @PERSISTENCYTYPE = 'paid06'
        SET  @MOBTYPE= 'MOB6_month'
END
  ELSE IF  @PERSISTENCYTYPE = '07'  
  BEGIN
    SET @PERSISTENCYTYPE = 'paid07'
    SET  @MOBTYPE= 'MOB7_month'
  END
  ELSE IF  @PERSISTENCYTYPE = '08'  
      BEGIN
      SET @PERSISTENCYTYPE = 'paid08'
    SET  @MOBTYPE= 'MOB8_month'
END
  ELSE IF  @PERSISTENCYTYPE = '09'
  BEGIN  
    SET @PERSISTENCYTYPE = 'paid09'
    SET  @MOBTYPE= 'MOB9_month'
  END
  
    ELSE IF  @PERSISTENCYTYPE = '10'  
    BEGIN
SET @PERSISTENCYTYPE = 'paid10'
  SET  @MOBTYPE= 'MOB10_month'
    END 

  ELSE IF  @PERSISTENCYTYPE = '11'  
    BEGIN
SET @PERSISTENCYTYPE = 'paid11'
  SET  @MOBTYPE= 'MOB11_month'
    END 

  ELSE IF  @PERSISTENCYTYPE = '12'  
  BEGIN
    SET @PERSISTENCYTYPE = 'paid12' 
SET  @MOBTYPE= 'MOB12_month'
  END
  ELSE IF  @PERSISTENCYTYPE = '13'  
    BEGIN
  SET @PERSISTENCYTYPE = 'paid13' 
  SET  @MOBTYPE= 'MOB13_month' 
END
  ELSE IF  @PERSISTENCYTYPE = '25'  
  BEGIN
      SET @PERSISTENCYTYPE = 'paid25'
  SET  @MOBTYPE= 'MOB25_month' 
    END 
  ELSE IF  @PERSISTENCYTYPE = '36'  
    BEGIN  
  SET @PERSISTENCYTYPE = 'paid36' 
      SET  @MOBTYPE= 'MOB36_month' 
    END
  

  DECLARE @TEMP_DATA AS NVARCHAR(MAX)
  DECLARE @MOBTYPE_ORI AS NVARCHAR(MAX)
  IF @ISTRANSPOSE = 1  
  BEGIN 
    --SET  @TEMP_DATA = ' FORMAT(' +  @MOBTYPE  + ',''yyyy-MM-dd'') AS '  +  @MOBTYPE

SET  @TEMP_DATA =  @MOBTYPE  
SET  @MOBTYPE = @DIMENSION
SET @DIMENSION = @TEMP_DATA
SET @MOBTYPE_ORI = @MOBTYPE
  END
  ELSE 
  BEGIN 
    SET @MOBTYPE_ORI =  @MOBTYPE
    SET @MOBTYPE =  @MOBTYPE  
  END 

DECLARE @STRQUERY AS NVARCHAR(MAX)

IF (EXISTS (SELECT * 
                FROM INFORMATION_SCHEMA.TABLES 
                WHERE TABLE_SCHEMA = 'DBO' 
                AND  TABLE_NAME = @PERSISTENCYTOOL_PERS ))
BEGIN
    SET  @STRQUERY  = 'DROP TABLE '  + @PERSISTENCYTOOL_PERS
EXEC (@STRQUERY)
END

IF (EXISTS (SELECT * 
                FROM INFORMATION_SCHEMA.TABLES 
                WHERE TABLE_SCHEMA = 'DBO' 
                AND  TABLE_NAME = @PERSISTENCYTOOL_TABLE ))
BEGIN
    SET  @STRQUERY  = 'DROP TABLE '  + @PERSISTENCYTOOL_TABLE
        EXEC (@STRQUERY)
END
SET @STRQUERY = ''

-- PREMIUM PERSISTENCY
    IF @PERSISTENCYVAR = 1
SET @STRQUERY  = 'SELECT ISNULL(' + @DIMENSION + ',0)AS ' + @DIMENSION  +','+ @MOBTYPE + ',QTY,cast((isnull('+ @PERSISTENCYTYPE +',0) / ACTIVEpREMIUM) as decimal(10,3)) AS PERSISTENCY  INTO ' +  @PERSISTENCYTOOL_PERS
    ELSE 
    SET @STRQUERY  = 'SELECT ISNULL(' + @DIMENSION + ',0)AS ' + @DIMENSION  +','+ @MOBTYPE + ',QTY,cast(((ACTIVEpREMIUM - isnull('+ @PERSISTENCYTYPE +',0)) / ACTIVEpREMIUM) as decimal(10,3)) AS PERSISTENCY  INTO ' +  @PERSISTENCYTOOL_PERS

SET @STRQUERY  = @STRQUERY +  '  FROM  ( SELECT '+ @MOBTYPE +' ,'+ @DIMENSION +', COUNT(POLICY) AS QTY,SUM(active_premium) AS ACTIVEpREMIUM,SUM('+ @PERSISTENCYTYPE + ') AS ' + @PERSISTENCYTYPE +'    FROM PERSISTENCY1  WHERE  (Effdt_period_date >= ' + '''' +  FORMAT(@STARDATE,'yyyy-MM-dd') + '''' + ' AND Effdt_period_date <= '+ '''' +  FORMAT(@ENDDATE,'yyyy-MM-dd')  + '''' + ') ' + @FILTER    +  @GROUPINGFILTER + ' ) AS X  '
SET @STRQUERY = @STRQUERY +  ' CREATE TABLE #ORDERING(ID  INTEGER IDENTITY(1,1),' + @DIMENSION + '  VARCHAR(200)) ' 
SET @STRQUERY = @STRQUERY + ' INSERT INTO #ORDERING  SELECT RTRIM(LTRIM(' + @DIMENSION + ')) FROM ' +  @PERSISTENCYTOOL_PERS  + ' GROUP BY  ' + @DIMENSION  
--SET @STRQUERY = @STRQUERY  + '  SELECT * FROM #ORDERING '
--EXEC (@STRQUERY)

SET @STRQUERY = @STRQUERY + ' DECLARE @ID AS INTEGER ' 
SET @STRQUERY = @STRQUERY + ' DECLARE @DMS AS VARCHAR(200)  ' 
SET @STRQUERY = @STRQUERY +  ' DECLARE @MAXVALUE AS INTEGER '
SET @STRQUERY = @STRQUERY +  ' SET @ID = 1 '
SET @STRQUERY = @STRQUERY +  ' SET @DMS = ' + '''' + @DIMENSION + '''' 
--SET @STRQUERY = @STRQUERY +  ' DELETE T_LOOKUPS WHERE  CATEGORY = ''PERSISTENCY''  INSERT INTO [T_LOOKUPS] VALUES (@DMS,''PERSISTENCY'')'

SET @STRQUERY = @STRQUERY +  ' SELECT @MAXVALUE = COUNT(*) FROM #ORDERING  '
SET @STRQUERY = @STRQUERY +  ' DECLARE @LIST_COLUMN AS NVARCHAR(MAX)  SET @LIST_COLUMN = ' + '''' + ''''
SET @STRQUERY = @STRQUERY + ' WHILE @ID <= @MAXVALUE '  
    SET @STRQUERY = @STRQUERY + ' BEGIN '

    SET @STRQUERY = @STRQUERY + '        SELECT  @DMS = ' + @DIMENSION  +  ' FROM #ORDERING AS A WHERE [ID] = @ID '

IF @DIMENSION LIKE '%MOB%'
--SET @DIMENSION  = FORMAT(CAST(@DIMENSION AS DATETIME),'yyyy-MM-dd') 
  SET @STRQUERY  = @STRQUERY  +  ' SET @DMS = FORMAT(CAST(@DMS AS DATETIME),''yyyy-MMM'') '

SET @STRQUERY  = @STRQUERY  +  ' IF @DMS <> ''PIA_rider''  '
    SET @STRQUERY  = @STRQUERY  +  '    SELECT @LIST_COLUMN =  @LIST_COLUMN  + '','' + ''['' + RTRIM(LTRIM(@DMS))  + '']''' 


--SET @STRQUERY = @STRQUERY + '      SELECT @LIST_COLUMN =  @LIST_COLUMN  + '','' + ''A.['' + (SELECT TOP 1 PARAMVALUE FROM T_LOOKUPS WHERE  CATEGORY = ''PERSISTENCY'')  + '']'' FROM #ORDERING AS A WHERE [ID] = @ID '
SET @STRQUERY = @STRQUERY +  '      SET @ID = @ID + 1 ' 

SET @STRQUERY = @STRQUERY +  '  END '
SET @STRQUERY = @STRQUERY + '  TRUNCATE TABLE T_PARAM ' 
SET @STRQUERY = @STRQUERY + ' INSERT INTO T_PARAM  SELECT SUBSTRING(@LIST_COLUMN,2,LEN(@LIST_COLUMN)) AS KOLOMN_NAME '
print (@STRQUERY)
EXEC (@STRQUERY)

DECLARE @COLS AS VARCHAR(MAX)
SELECT @COLS = PARAMTEXT  FROM T_PARAM  
--DECLARE @STRSQL VARCHAR(MAX)

IF @MOBTYPE LIKE '%MOB%'
SET @STRQUERY =  ' SELECT *  INTO #T_PERSISTENCY_TOOL FROM  ( SELECT  FORMAT(' + @MOBTYPE + ',''yyyy-MM'') as ' + @MOBTYPE +' ,'+ @DIMENSION +',(CAST(CAST(PERSISTENCY * 100 AS DECIMAL(20,1)) AS VARCHAR(20)) + ' + '''' + '%' + '''' + ' )  as PERSISTENCY FROM ' + @PERSISTENCYTOOL_PERS +' ) AS SourceTable PIVOT(MAX(PERSISTENCY) FOR ' + @DIMENSION + ' IN(' + @COLS + ')) AS PivotTable' 
    ELSE 
  SET @STRQUERY =  ' SELECT *  INTO #T_PERSISTENCY_TOOL FROM  ( SELECT '+ @MOBTYPE +','+ @DIMENSION +',(CAST(CAST(PERSISTENCY * 100 AS DECIMAL(20,1)) AS VARCHAR(20)) + ' + '''' + '%' + '''' + ' )  as PERSISTENCY FROM '+  @PERSISTENCYTOOL_PERS + ' ) AS SourceTable PIVOT(MAX(PERSISTENCY) FOR ' + @DIMENSION + ' IN(' + @COLS + ')) AS PivotTable' 



DECLARE @QUERY AS NVARCHAR(MAX)
SET @COLS = REPLACE(@COLS,'.','')
SET @COLS = REPLACE(@COLS,'''','')
SET @COLS = REPLACE(@COLS,'"','')
SET @COLS = REPLACE(@COLS,']','] VARCHAR(200) ')
--SET @COLS = REPLACE(@COLS,'SEMESTER','SEMESTER_ ')
    --SET @COLS = REPLACE(@COLS,']','] FLOAT ')
  
    SET @STRQUERY  = @STRQUERY +  '  CREATE TABLE ' + @PERSISTENCYTOOL_TABLE + ' (' + @MOBTYPE + '  VARCHAR(200),' +  @COLS + ')'

SET @STRQUERY  = @STRQUERY + ' INSERT INTO ' + @PERSISTENCYTOOL_TABLE  +  ' SELECT * FROM #T_PERSISTENCY_TOOL'
print (@STRQUERY)
EXEC  (@STRQUERY)

END

GO
